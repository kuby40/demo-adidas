generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


type Review {
  description String?
  stars       Int
  title       String
}

type Description {
  explanation String
  title       String
}

type Stock {
  color String
  size Float
  available Int
}

model Product {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  description Description
  details String[]
  gender String
  name String
  picture String
  price Float
  reviews Review[]
  stock Stock[]
  unitsSold Int
  dateAdded DateTime @default(now())
  favoritedByIDs String[] @db.ObjectId
  favoritedBy User[] @relation(fields: [favoritedByIDs], references: [id])
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String?   @unique
  emailVerified DateTime?
  image     String?
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favoriteIDs String[] @db.ObjectId
  favorites Product[] @relation(fields: [favoriteIDs], references: [id])
  role Role @default(USER)
  accounts      Account[]
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
